from numpy import *
from sklearn import cross_validation
import csv as csv
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from models import *

def predmissvals(full):
    
    # The goal of this function is to predict some missing values using a RandomForest model. 
    # To do so, we take the full dataset, separate it with a set where there are no missing values
    # and a set where there are missing values (the test set)
    
    # The training data is composed of every rows which have a cabincode different than 0
    training_cabs = full[full['CabinCode'] != 0]
    # The test data is the opposite (rows equals to 0)
    test_cabs = full[full['CabinCode'] == 0]
    
    # Take the labels for the training test
    training_cabs_labels = training_cabs['CabinCode']
    
    
    # Now, we can drop columns that we wont use in the training and test set
    training_cabs.drop(columns=['CabinCode', 'Age', 'Embarked'], axis = 1, inplace=True)
    test_cabs.drop(columns=['CabinCode', 'Age', 'Embarked'], axis = 1, inplace=True)
    
    # Convert in numeric values, and of course delete the survived column
    training_cabs = training_cabs.convert_objects(convert_numeric = True)
    test_cabs = test_cabs.convert_objects(convert_numeric = True)
    training_cabs.drop(columns=['Survived'], axis = 1, inplace=True)
    test_cabs.drop(columns=['Survived'], axis = 1, inplace=True)
    
    # Transform in numpy arrays
    training_cabs = training_cabs.values
    training_cabs_labels = training_cabs_labels.values
    test_cabs = test_cabs.values
    
    # Build a zero matrix array for the predicted values
    test_cabs_vals = zeros((len(test_cabs),1))

    
    # Now, we have a training set and a test set, let's do the prediction :-)
    test_cabs_vals = RandomForest(training_cabs, training_cabs_labels, test_cabs)

    return test_cabs_vals
